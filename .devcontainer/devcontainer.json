{
    "name": "Kotlin Android App Dev",
    // Using a universal image as a base, which includes many common tools.
    // You can choose a more specific Ubuntu base if preferred.
    "image": "mcr.microsoft.com/devcontainers/universal:2-linux",

    "features": {
        // Install Java (OpenJDK 17 is a good choice for modern Android dev)
        "ghcr.io/devcontainers/features/java:1": {
            "version": "17",
            "installMaven": "false", // Not strictly needed for Android with Gradle
            "installGradle": "false" // Android projects use their own Gradle wrapper
        },
        // Install Android SDK, build-tools, platform-tools, and an emulator image
        "ghcr.io/devcontainers/features/android:1": {
            "version": "latest",             // Installs the latest command-line tools
            "platformVersion": "34",         // Target Android API level (e.g., Android 14)
            "buildToolsVersion": "34.0.0",   // Specific build tools version (check latest stable)
            "installEmulator": true,
            "emulatorArchitecture": "x86_64",
            "emulatorTarget": "google_apis_playstore", // "google_apis" or "google_apis_playstore"
            "systemImageApi": "34"           // API level for the system image
        }
    },

    "customizations": {
        "vscode": {
            "extensions": [
                "kotlinlang.kotlin",                  // Official Kotlin language support
                "vscjava.vscode-java-pack",           // Essential for Java/Kotlin projects
                "redhat.java",                        // Java language support by Red Hat (often a dependency)
                "GoogleCloudTools.cloudcode",         // Excellent for Android/Kubernetes, includes KMP wizards, Android emulator integration
                "vscjava.vscode-gradle"               // Gradle tasks and script support
            ]
        }
    },

    // Forward ports. 5554/5555 are common for emulator.
    // 8080 is common for web apps, but might be used by some Android tools or debug proxies.
    // "forwardPorts": [8080, 5554, 5555],

    // Post-create command to accept all SDK licenses automatically.
    // The android feature *should* handle this, but this is a good fallback.
    // If you still face license issues, uncomment and rebuild.
    // "postCreateCommand": "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses",


    // Use the non-root 'vscode' user (common in dev container images)
    "remoteUser": "vscode"
}
