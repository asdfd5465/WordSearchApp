name: Android CI - Build Debug APK

on:
  push:
    branches: [ "main" ] # Or your default branch
  pull_request:
    branches: [ "main" ] # Or your default branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin' # Adoptium Temurin is a good choice
        cache: 'gradle'

    # It's good practice to ensure cmdline-tools are available and then install specific SDK components
    # The 'actions/setup-android' can simplify this, but manual setup gives more control for CLI-focused projects
    - name: Set up Android SDK
      run: |
        # Ensure ANDROID_HOME is set (usually defaults to /usr/local/lib/android/sdk)
        # and cmdline-tools are available or install them.
        # GitHub runners often have some Android SDK pre-installed, but we specify.
        echo "ANDROID_SDK_ROOT is $ANDROID_SDK_ROOT" # Check default if any
        export ANDROID_HOME=${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk} # Use existing or set a default
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools

        # Install command-line tools if not already in a known good state
        # This part can be more robust by downloading specific versions if needed
        # For simplicity, assuming sdkmanager is somewhat available or installing a fresh copy
        mkdir -p $ANDROID_HOME/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        unzip -q -d $ANDROID_HOME/cmdline-tools cmdline-tools.zip
        # The unzipped folder might be 'cmdline-tools', move its contents to 'latest'
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest_temp
        rm -rf $ANDROID_HOME/cmdline-tools/cmdline-tools # remove the now empty dir
        mv $ANDROID_HOME/cmdline-tools/latest_temp $ANDROID_HOME/cmdline-tools/latest

        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null || true # Accept licenses
        echo "Installed SDK Packages:"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed

        echo "Installing SDK components..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools" > /dev/null
        echo "SDK components installation complete."

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew assembleDebug

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug # Name of the artifact
        path: app/build/outputs/apk/debug/app-debug.apk # Path to the file to upload
        if-no-files-found: error # Fail the workflow if the APK is not found
